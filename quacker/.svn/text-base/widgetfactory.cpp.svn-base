/*
 * Copyright (c) 2005-2006 Jason Katz-Brown and John O'Laughlin.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The names of the authors may not be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "bagdisplay.h"
#include "boarddisplay.h"
#include "graphicalboard.h"
#include "rackdisplay.h"
#include "widgetfactory.h"

View *TextFactory::createBoardDisplay()
{
	return new TextBoard;
}

View *TextFactory::createRackDisplay()
{
	return new QuickEntryRack;
}

View *TextFactory::createBagDisplay()
{
	return new BagDisplay;
}

View *GraphicalFactory::createBoardDisplay()
{
	return new GraphicalBoard;
}

View *GraphicalFactory::createRackDisplay()
{
	return new QuickEntryRack;
}

View *GraphicalFactory::createBagDisplay()
{
	return new BagDisplay;
}

void GraphicalFactory::finishUp(View *board, View *rack, View * /* bag */)
{
	View::connect(static_cast<GraphicalBoard *>(board)->boardFrame(), SIGNAL(tileFontChanged(const QFont &)), static_cast<QuickEntryRack *>(rack), SLOT(tileFontChanged(const QFont &)));
}

