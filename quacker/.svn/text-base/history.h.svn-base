/*
 * Copyright (c) 2005-2006 Jason Katz-Brown and John O'Laughlin.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The names of the authors may not be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef QUACKER_HISTORY_H
#define QUACKER_HISTORY_H

#include <QMap>

#include <game.h>

#include "view.h"

class QTableWidget;
class QTableWidgetItem;
class QVBoxLayout;

namespace Quackle
{
	class Game;
	class GamePosition;
	class History;
}

class History : public HistoryView
{
Q_OBJECT

public:
	History(QWidget *parent = 0);
	virtual ~History()
	{
	}

public slots:
	virtual void historyChanged(const Quackle::History &history);

private slots:
	void itemActivated(QTableWidgetItem *item);

protected:
	QTableWidgetItem *createItem(const Quackle::GamePosition &position, int currentPlayer);
	QTableWidgetItem *createPlainItem(const QString &contentString);
	QMap<Quackle::HistoryLocation, QTableWidgetItem *> m_locationMap;

	QVBoxLayout *m_vlayout;
	QTableWidget *m_tableWidget;
};

#endif
